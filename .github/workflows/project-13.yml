name: project-13

on: workflow_dispatch

env:
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
  IMAGE_NAME: ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ secrets.AWS_DEFAULT_REGION }}.amazonaws.com/juice-shop

jobs:
  deploy_image:
    runs-on: self-hosted
    container:
      image: amazon/aws-cli
    steps:
      - name: Pull and update container
        run: |
          LOG_IN_CMD="export AWS_DEFAULT_REGION=$AWS_DEFAULT_REGION; aws ecr get-login-password | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com"
          COMMANDS_TO_EXECUTE="docker pull $IMAGE_NAME:latest && (docker stop juice-shop || true) && (docker rm juice-shop || true) && docker run -d --name juice-shop -p 3000:3000 $IMAGE_NAME:latest"
          COMMAND_ID=$(aws ssm send-command --instance-ids "i-0bac17687ac36f573" --document-name "AWS-RunShellScript" --parameters "commands=[$LOG_IN_CMD, $COMMANDS_TO_EXECUTE]" --query "Command.CommandId" --output text)
          sleep 15
          aws ssm get-command-invocation --command-id "$COMMAND_ID" --instance-id "i-0bac17687ac36f573"

  zap:
    needs: deploy_image
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Run ZAP baseline scan
        run: |
          docker run -v $(pwd):/zap/wrk/:rw -t ghcr.io/zaproxy/zaproxy:stable zap-baseline.py \
          -t http://13.49.46.214:3000 -g gen.conf -x baseline.xml
      - name: Upload zap baseline report
        uses: actions/upload-artifact@v4
        with:
          name: zap-baseline-report
          path: baseline.xml
