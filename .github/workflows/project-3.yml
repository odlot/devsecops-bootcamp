name: project-3

on: workflow_dispatch

env:
  IMAGE_NAME: odlotdevsecops/demo-app
  IMAGE_TAG: juice-shop-1.0.${{ github.run_number }}

jobs:
  create_cache:
    runs-on: ubuntu-latest
    container:
      image: node:18-bullseye
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: "true"
      - name: Install dependencies
        run: yarn install
        working-directory: ./juice-shop
      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: |
            ./juice-shop/node_modules
            ./juice-shop/.yarn
            ./juice-shop/yarn.lock
          key: ${{ runner.os }}-yarn-${{ hashFiles('./juice-shop/yarn.lock') }}

  yarn_test:
    needs: create_cache
    runs-on: ubuntu-latest
    container:
      image: node:18-bullseye
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: "true"
      - name: Restore cache
        uses: actions/cache@v4
        with:
          path: |
            ./juice-shop/node_modules
            ./juice-shop/.yarn
            ./juice-shop/yarn.lock
          key: ${{ runner.os }}-yarn-${{ hashFiles('./juice-shop/yarn.lock') }}
      - name: Install package dependencies
        run: yarn install
        working-directory: ./juice-shop
      - name: Run tests
        run: yarn test
        working-directory: ./juice-shop

  gitleaks:
    needs: yarn_test
    runs-on: ubuntu-latest
    container:
      image: zricethezav/gitleaks
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: "true"
      - name: Run Gitleaks scan
        run: gitleaks detect --verbose --source ./juice-shop -f json -r gitleaks.json
      - name: Upload Gitleaks report
        uses: actions/upload-artifact@v4
        with:
          name: gitleaks-report
          path: gitleaks.json
    continue-on-error: true

  njsscan:
    needs: yarn_test
    runs-on: ubuntu-latest
    container:
      image: python
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: "true"
      - name: Upgrade njsscan
        run: pip3 install --upgrade njsscan
      - name: Run njsscan
        run: njsscan --exit-warning ./juice-shop --sarif -o njsscan.sarif
      - name: Upload njsscan report
        uses: actions/upload-artifact@v4
        with:
          name: njsscan-report
          path: njsscan.sarif
    continue-on-error: true

  semgrep:
    needs: yarn_test
    runs-on: ubuntu-latest
    container:
      image: semgrep/semgrep
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: "true"
      - name: Semgrep
        run: semgrep scan --config=p/javascript ./juice-shop --json --output semgrep.json
      - name: Upload Semgrep report
        uses: actions/upload-artifact@v4
        with:
          name: semgrep-report
          path: semgrep.json
    continue-on-error: true

  upload_reports:
    needs: [gitleaks, njsscan, semgrep]
    runs-on: ubuntu-latest
    container:
      image: python
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: "true"
      - name: Upgrade njsscan
        run: pip3 install requests
      - name: Download all workflow run artifacts
        uses: actions/download-artifact@v4
      - name: Upload gitleaks.json
        run: python3 project-3/upload-reports.py gitleaks.json
      - name: Upload njsscan.sarif
        run: python3 project-3/upload-reports.py njsscan.sarif
      - name: Upload semgrep.json
        run: python3 project-3/upload-reports.py semgrep.json

  build_image:
    needs: upload_reports
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: "true"
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: "juice-shop"
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
