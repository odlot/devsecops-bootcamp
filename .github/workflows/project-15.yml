name: project-15

on: workflow_dispatch

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.IAC_AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.IAC_AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
  TF_VAR_env_prefix: "dev"
  TF_VAR_runner_registration_token: ${{ secrets.RUNNER_REGISTRATION_TOKEN }}

jobs:
  tf:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./project-14
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: "true"
      - name: Install tf
        run: |
          sudo apt-get update && sudo apt-get install -y gnupg software-properties-common
          wget -O- https://apt.releases.hashicorp.com/gpg | \
          gpg --dearmor | \
          sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg > /dev/null
          gpg --no-default-keyring \
          --keyring /usr/share/keyrings/hashicorp-archive-keyring.gpg \
          --fingerprint
          echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] \
          https://apt.releases.hashicorp.com $(lsb_release -cs) main" | \
          sudo tee /etc/apt/sources.list.d/hashicorp.list
          sudo apt update
          sudo apt-get install terraform
      - name: Terraform init
        run: terraform init
      - name: Terraform validate
        run: terraform validate
      - name: Install tfsec
        run: |
          curl -s https://raw.githubusercontent.com/aquasecurity/tfsec/master/scripts/install_linux.sh | bash
      - name: TFSec Scan
        run: tfsec . --format json --out tfsec.json
        continue-on-error: true
      - name: Upload TFSec report
        uses: actions/upload-artifact@v4
        with:
          name: tfsec-report
          path: ./project-14/tfsec.json
        continue-on-error: true
      # Create
      #- name: Terraform plan
      #  run: terraform plan -out "planfile"
      #- name: Terraform deploy
      #  run: terraform apply -input=false "planfile"
      # Destroy
      #- name: Terraform plan destroy
      #  run: terraform plan -destroy -out "planfile"
      #- name: Terraform destroy
      #  run: terraform apply -auto-approve "planfile"
